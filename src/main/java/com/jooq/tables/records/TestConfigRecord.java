/*
 * This file is generated by jOOQ.
 */
package com.jooq.tables.records;


import com.jooq.tables.TestConfig;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestConfigRecord extends UpdatableRecordImpl<TestConfigRecord> implements Record7<String, String, String, LocalDateTime, String, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>apitest.test_config.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>apitest.test_config.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>apitest.test_config.base_header</code>.
     */
    public void setBaseHeader(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>apitest.test_config.base_header</code>.
     */
    public String getBaseHeader() {
        return (String) get(1);
    }

    /**
     * Setter for <code>apitest.test_config.base_url</code>.
     */
    public void setBaseUrl(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>apitest.test_config.base_url</code>.
     */
    public String getBaseUrl() {
        return (String) get(2);
    }

    /**
     * Setter for <code>apitest.test_config.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>apitest.test_config.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>apitest.test_config.group_id</code>.
     */
    public void setGroupId(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>apitest.test_config.group_id</code>.
     */
    public String getGroupId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>apitest.test_config.update_time</code>.
     */
    public void setUpdateTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>apitest.test_config.update_time</code>.
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>apitest.test_config.user_define_param</code>.
     */
    public void setUserDefineParam(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>apitest.test_config.user_define_param</code>.
     */
    public String getUserDefineParam() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TestConfig.TEST_CONFIG.ID;
    }

    @Override
    public Field<String> field2() {
        return TestConfig.TEST_CONFIG.BASE_HEADER;
    }

    @Override
    public Field<String> field3() {
        return TestConfig.TEST_CONFIG.BASE_URL;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return TestConfig.TEST_CONFIG.CREATE_TIME;
    }

    @Override
    public Field<String> field5() {
        return TestConfig.TEST_CONFIG.GROUP_ID;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return TestConfig.TEST_CONFIG.UPDATE_TIME;
    }

    @Override
    public Field<String> field7() {
        return TestConfig.TEST_CONFIG.USER_DEFINE_PARAM;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getBaseHeader();
    }

    @Override
    public String component3() {
        return getBaseUrl();
    }

    @Override
    public LocalDateTime component4() {
        return getCreateTime();
    }

    @Override
    public String component5() {
        return getGroupId();
    }

    @Override
    public LocalDateTime component6() {
        return getUpdateTime();
    }

    @Override
    public String component7() {
        return getUserDefineParam();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getBaseHeader();
    }

    @Override
    public String value3() {
        return getBaseUrl();
    }

    @Override
    public LocalDateTime value4() {
        return getCreateTime();
    }

    @Override
    public String value5() {
        return getGroupId();
    }

    @Override
    public LocalDateTime value6() {
        return getUpdateTime();
    }

    @Override
    public String value7() {
        return getUserDefineParam();
    }

    @Override
    public TestConfigRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public TestConfigRecord value2(String value) {
        setBaseHeader(value);
        return this;
    }

    @Override
    public TestConfigRecord value3(String value) {
        setBaseUrl(value);
        return this;
    }

    @Override
    public TestConfigRecord value4(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public TestConfigRecord value5(String value) {
        setGroupId(value);
        return this;
    }

    @Override
    public TestConfigRecord value6(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public TestConfigRecord value7(String value) {
        setUserDefineParam(value);
        return this;
    }

    @Override
    public TestConfigRecord values(String value1, String value2, String value3, LocalDateTime value4, String value5, LocalDateTime value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TestConfigRecord
     */
    public TestConfigRecord() {
        super(TestConfig.TEST_CONFIG);
    }

    /**
     * Create a detached, initialised TestConfigRecord
     */
    public TestConfigRecord(String id, String baseHeader, String baseUrl, LocalDateTime createTime, String groupId, LocalDateTime updateTime, String userDefineParam) {
        super(TestConfig.TEST_CONFIG);

        setId(id);
        setBaseHeader(baseHeader);
        setBaseUrl(baseUrl);
        setCreateTime(createTime);
        setGroupId(groupId);
        setUpdateTime(updateTime);
        setUserDefineParam(userDefineParam);
    }
}
